<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KAAAAABJRU5ErkJggg==
</value>
  </data>
</root>